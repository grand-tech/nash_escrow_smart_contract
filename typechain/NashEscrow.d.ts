/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
  BaseContract,
  ContractTransaction,
  Overrides,
  PayableOverrides,
  CallOverrides,
} from "ethers";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";
import type { TypedEventFilter, TypedEvent, TypedListener } from "./common";

interface NashEscrowInterface extends ethers.utils.Interface {
  functions: {
    "agentAcceptDepositTransaction(uint256,string)": FunctionFragment;
    "agentAcceptWithdrawalTransaction(uint256,string)": FunctionFragment;
    "agentConfirmPayment(uint256)": FunctionFragment;
    "clientConfirmPayment(uint256)": FunctionFragment;
    "countSuccessfulTransactions()": FunctionFragment;
    "finalizeTransaction(uint256)": FunctionFragment;
    "getAgentFee()": FunctionFragment;
    "getNashFee()": FunctionFragment;
    "getNextTransactionIndex()": FunctionFragment;
    "getNextUnpairedTransaction(uint256)": FunctionFragment;
    "getTransactionByIndex(uint256)": FunctionFragment;
    "getTransactions(uint256,uint256,uint8)": FunctionFragment;
    "initializeDepositTransaction(uint256,string)": FunctionFragment;
    "initializeWithdrawalTransaction(uint256,string)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "agentAcceptDepositTransaction",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "agentAcceptWithdrawalTransaction",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "agentConfirmPayment",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "clientConfirmPayment",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "countSuccessfulTransactions",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "finalizeTransaction",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getAgentFee",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getNashFee",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getNextTransactionIndex",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getNextUnpairedTransaction",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getTransactionByIndex",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getTransactions",
    values: [BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "initializeDepositTransaction",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "initializeWithdrawalTransaction",
    values: [BigNumberish, string]
  ): string;

  decodeFunctionResult(
    functionFragment: "agentAcceptDepositTransaction",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "agentAcceptWithdrawalTransaction",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "agentConfirmPayment",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "clientConfirmPayment",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "countSuccessfulTransactions",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "finalizeTransaction",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAgentFee",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getNashFee", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getNextTransactionIndex",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getNextUnpairedTransaction",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTransactionByIndex",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTransactions",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "initializeDepositTransaction",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "initializeWithdrawalTransaction",
    data: BytesLike
  ): Result;

  events: {
    "AgentConfirmationEvent(tuple)": EventFragment;
    "AgentPairingEvent(tuple)": EventFragment;
    "ClientConfirmationEvent(tuple)": EventFragment;
    "ConfirmationCompletedEvent(tuple)": EventFragment;
    "TransactionCompletionEvent(tuple)": EventFragment;
    "TransactionInitEvent(tuple)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "AgentConfirmationEvent"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "AgentPairingEvent"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ClientConfirmationEvent"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ConfirmationCompletedEvent"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TransactionCompletionEvent"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TransactionInitEvent"): EventFragment;
}

export type AgentConfirmationEventEvent = TypedEvent<
  [
    [
      BigNumber,
      number,
      string,
      string,
      number,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      boolean,
      boolean,
      string,
      string
    ] & {
      id: BigNumber;
      txType: number;
      clientAddress: string;
      agentAddress: string;
      status: number;
      netAmount: BigNumber;
      agentFee: BigNumber;
      nashFee: BigNumber;
      grossAmount: BigNumber;
      agentApproval: boolean;
      clientApproval: boolean;
      agentPhoneNumber: string;
      clientPhoneNumber: string;
    }
  ] & {
    wtx: [
      BigNumber,
      number,
      string,
      string,
      number,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      boolean,
      boolean,
      string,
      string
    ] & {
      id: BigNumber;
      txType: number;
      clientAddress: string;
      agentAddress: string;
      status: number;
      netAmount: BigNumber;
      agentFee: BigNumber;
      nashFee: BigNumber;
      grossAmount: BigNumber;
      agentApproval: boolean;
      clientApproval: boolean;
      agentPhoneNumber: string;
      clientPhoneNumber: string;
    };
  }
>;

export type AgentPairingEventEvent = TypedEvent<
  [
    [
      BigNumber,
      number,
      string,
      string,
      number,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      boolean,
      boolean,
      string,
      string
    ] & {
      id: BigNumber;
      txType: number;
      clientAddress: string;
      agentAddress: string;
      status: number;
      netAmount: BigNumber;
      agentFee: BigNumber;
      nashFee: BigNumber;
      grossAmount: BigNumber;
      agentApproval: boolean;
      clientApproval: boolean;
      agentPhoneNumber: string;
      clientPhoneNumber: string;
    }
  ] & {
    wtx: [
      BigNumber,
      number,
      string,
      string,
      number,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      boolean,
      boolean,
      string,
      string
    ] & {
      id: BigNumber;
      txType: number;
      clientAddress: string;
      agentAddress: string;
      status: number;
      netAmount: BigNumber;
      agentFee: BigNumber;
      nashFee: BigNumber;
      grossAmount: BigNumber;
      agentApproval: boolean;
      clientApproval: boolean;
      agentPhoneNumber: string;
      clientPhoneNumber: string;
    };
  }
>;

export type ClientConfirmationEventEvent = TypedEvent<
  [
    [
      BigNumber,
      number,
      string,
      string,
      number,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      boolean,
      boolean,
      string,
      string
    ] & {
      id: BigNumber;
      txType: number;
      clientAddress: string;
      agentAddress: string;
      status: number;
      netAmount: BigNumber;
      agentFee: BigNumber;
      nashFee: BigNumber;
      grossAmount: BigNumber;
      agentApproval: boolean;
      clientApproval: boolean;
      agentPhoneNumber: string;
      clientPhoneNumber: string;
    }
  ] & {
    wtx: [
      BigNumber,
      number,
      string,
      string,
      number,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      boolean,
      boolean,
      string,
      string
    ] & {
      id: BigNumber;
      txType: number;
      clientAddress: string;
      agentAddress: string;
      status: number;
      netAmount: BigNumber;
      agentFee: BigNumber;
      nashFee: BigNumber;
      grossAmount: BigNumber;
      agentApproval: boolean;
      clientApproval: boolean;
      agentPhoneNumber: string;
      clientPhoneNumber: string;
    };
  }
>;

export type ConfirmationCompletedEventEvent = TypedEvent<
  [
    [
      BigNumber,
      number,
      string,
      string,
      number,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      boolean,
      boolean,
      string,
      string
    ] & {
      id: BigNumber;
      txType: number;
      clientAddress: string;
      agentAddress: string;
      status: number;
      netAmount: BigNumber;
      agentFee: BigNumber;
      nashFee: BigNumber;
      grossAmount: BigNumber;
      agentApproval: boolean;
      clientApproval: boolean;
      agentPhoneNumber: string;
      clientPhoneNumber: string;
    }
  ] & {
    wtx: [
      BigNumber,
      number,
      string,
      string,
      number,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      boolean,
      boolean,
      string,
      string
    ] & {
      id: BigNumber;
      txType: number;
      clientAddress: string;
      agentAddress: string;
      status: number;
      netAmount: BigNumber;
      agentFee: BigNumber;
      nashFee: BigNumber;
      grossAmount: BigNumber;
      agentApproval: boolean;
      clientApproval: boolean;
      agentPhoneNumber: string;
      clientPhoneNumber: string;
    };
  }
>;

export type TransactionCompletionEventEvent = TypedEvent<
  [
    [
      BigNumber,
      number,
      string,
      string,
      number,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      boolean,
      boolean,
      string,
      string
    ] & {
      id: BigNumber;
      txType: number;
      clientAddress: string;
      agentAddress: string;
      status: number;
      netAmount: BigNumber;
      agentFee: BigNumber;
      nashFee: BigNumber;
      grossAmount: BigNumber;
      agentApproval: boolean;
      clientApproval: boolean;
      agentPhoneNumber: string;
      clientPhoneNumber: string;
    }
  ] & {
    wtx: [
      BigNumber,
      number,
      string,
      string,
      number,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      boolean,
      boolean,
      string,
      string
    ] & {
      id: BigNumber;
      txType: number;
      clientAddress: string;
      agentAddress: string;
      status: number;
      netAmount: BigNumber;
      agentFee: BigNumber;
      nashFee: BigNumber;
      grossAmount: BigNumber;
      agentApproval: boolean;
      clientApproval: boolean;
      agentPhoneNumber: string;
      clientPhoneNumber: string;
    };
  }
>;

export type TransactionInitEventEvent = TypedEvent<
  [
    [
      BigNumber,
      number,
      string,
      string,
      number,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      boolean,
      boolean,
      string,
      string
    ] & {
      id: BigNumber;
      txType: number;
      clientAddress: string;
      agentAddress: string;
      status: number;
      netAmount: BigNumber;
      agentFee: BigNumber;
      nashFee: BigNumber;
      grossAmount: BigNumber;
      agentApproval: boolean;
      clientApproval: boolean;
      agentPhoneNumber: string;
      clientPhoneNumber: string;
    }
  ] & {
    wtx: [
      BigNumber,
      number,
      string,
      string,
      number,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      boolean,
      boolean,
      string,
      string
    ] & {
      id: BigNumber;
      txType: number;
      clientAddress: string;
      agentAddress: string;
      status: number;
      netAmount: BigNumber;
      agentFee: BigNumber;
      nashFee: BigNumber;
      grossAmount: BigNumber;
      agentApproval: boolean;
      clientApproval: boolean;
      agentPhoneNumber: string;
      clientPhoneNumber: string;
    };
  }
>;

export class NashEscrow extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  listeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter?: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): Array<TypedListener<EventArgsArray, EventArgsObject>>;
  off<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  on<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  once<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeListener<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeAllListeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): this;

  listeners(eventName?: string): Array<Listener>;
  off(eventName: string, listener: Listener): this;
  on(eventName: string, listener: Listener): this;
  once(eventName: string, listener: Listener): this;
  removeListener(eventName: string, listener: Listener): this;
  removeAllListeners(eventName?: string): this;

  queryFilter<EventArgsArray extends Array<any>, EventArgsObject>(
    event: TypedEventFilter<EventArgsArray, EventArgsObject>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<EventArgsArray & EventArgsObject>>>;

  interface: NashEscrowInterface;

  functions: {
    agentAcceptDepositTransaction(
      _transactionid: BigNumberish,
      _phoneNumber: string,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    agentAcceptWithdrawalTransaction(
      _transactionid: BigNumberish,
      _phoneNumber: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    agentConfirmPayment(
      _transactionid: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    clientConfirmPayment(
      _transactionid: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    countSuccessfulTransactions(
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    finalizeTransaction(
      _transactionid: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    getAgentFee(overrides?: CallOverrides): Promise<[BigNumber]>;

    getNashFee(overrides?: CallOverrides): Promise<[BigNumber]>;

    getNextTransactionIndex(overrides?: CallOverrides): Promise<[BigNumber]>;

    getNextUnpairedTransaction(
      _transactionID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        [
          BigNumber,
          number,
          string,
          string,
          number,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          boolean,
          boolean,
          string,
          string
        ] & {
          id: BigNumber;
          txType: number;
          clientAddress: string;
          agentAddress: string;
          status: number;
          netAmount: BigNumber;
          agentFee: BigNumber;
          nashFee: BigNumber;
          grossAmount: BigNumber;
          agentApproval: boolean;
          clientApproval: boolean;
          agentPhoneNumber: string;
          clientPhoneNumber: string;
        }
      ]
    >;

    getTransactionByIndex(
      _transactionID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        [
          BigNumber,
          number,
          string,
          string,
          number,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          boolean,
          boolean,
          string,
          string
        ] & {
          id: BigNumber;
          txType: number;
          clientAddress: string;
          agentAddress: string;
          status: number;
          netAmount: BigNumber;
          agentFee: BigNumber;
          nashFee: BigNumber;
          grossAmount: BigNumber;
          agentApproval: boolean;
          clientApproval: boolean;
          agentPhoneNumber: string;
          clientPhoneNumber: string;
        }
      ]
    >;

    getTransactions(
      _paginationCount: BigNumberish,
      _startingPoint: BigNumberish,
      _status: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        ([
          BigNumber,
          number,
          string,
          string,
          number,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          boolean,
          boolean,
          string,
          string
        ] & {
          id: BigNumber;
          txType: number;
          clientAddress: string;
          agentAddress: string;
          status: number;
          netAmount: BigNumber;
          agentFee: BigNumber;
          nashFee: BigNumber;
          grossAmount: BigNumber;
          agentApproval: boolean;
          clientApproval: boolean;
          agentPhoneNumber: string;
          clientPhoneNumber: string;
        })[]
      ]
    >;

    initializeDepositTransaction(
      _amount: BigNumberish,
      _phoneNumber: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    initializeWithdrawalTransaction(
      _amount: BigNumberish,
      _phoneNumber: string,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;
  };

  agentAcceptDepositTransaction(
    _transactionid: BigNumberish,
    _phoneNumber: string,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  agentAcceptWithdrawalTransaction(
    _transactionid: BigNumberish,
    _phoneNumber: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  agentConfirmPayment(
    _transactionid: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  clientConfirmPayment(
    _transactionid: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  countSuccessfulTransactions(overrides?: CallOverrides): Promise<BigNumber>;

  finalizeTransaction(
    _transactionid: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  getAgentFee(overrides?: CallOverrides): Promise<BigNumber>;

  getNashFee(overrides?: CallOverrides): Promise<BigNumber>;

  getNextTransactionIndex(overrides?: CallOverrides): Promise<BigNumber>;

  getNextUnpairedTransaction(
    _transactionID: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [
      BigNumber,
      number,
      string,
      string,
      number,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      boolean,
      boolean,
      string,
      string
    ] & {
      id: BigNumber;
      txType: number;
      clientAddress: string;
      agentAddress: string;
      status: number;
      netAmount: BigNumber;
      agentFee: BigNumber;
      nashFee: BigNumber;
      grossAmount: BigNumber;
      agentApproval: boolean;
      clientApproval: boolean;
      agentPhoneNumber: string;
      clientPhoneNumber: string;
    }
  >;

  getTransactionByIndex(
    _transactionID: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [
      BigNumber,
      number,
      string,
      string,
      number,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      boolean,
      boolean,
      string,
      string
    ] & {
      id: BigNumber;
      txType: number;
      clientAddress: string;
      agentAddress: string;
      status: number;
      netAmount: BigNumber;
      agentFee: BigNumber;
      nashFee: BigNumber;
      grossAmount: BigNumber;
      agentApproval: boolean;
      clientApproval: boolean;
      agentPhoneNumber: string;
      clientPhoneNumber: string;
    }
  >;

  getTransactions(
    _paginationCount: BigNumberish,
    _startingPoint: BigNumberish,
    _status: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    ([
      BigNumber,
      number,
      string,
      string,
      number,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      boolean,
      boolean,
      string,
      string
    ] & {
      id: BigNumber;
      txType: number;
      clientAddress: string;
      agentAddress: string;
      status: number;
      netAmount: BigNumber;
      agentFee: BigNumber;
      nashFee: BigNumber;
      grossAmount: BigNumber;
      agentApproval: boolean;
      clientApproval: boolean;
      agentPhoneNumber: string;
      clientPhoneNumber: string;
    })[]
  >;

  initializeDepositTransaction(
    _amount: BigNumberish,
    _phoneNumber: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  initializeWithdrawalTransaction(
    _amount: BigNumberish,
    _phoneNumber: string,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    agentAcceptDepositTransaction(
      _transactionid: BigNumberish,
      _phoneNumber: string,
      overrides?: CallOverrides
    ): Promise<void>;

    agentAcceptWithdrawalTransaction(
      _transactionid: BigNumberish,
      _phoneNumber: string,
      overrides?: CallOverrides
    ): Promise<void>;

    agentConfirmPayment(
      _transactionid: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    clientConfirmPayment(
      _transactionid: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    countSuccessfulTransactions(overrides?: CallOverrides): Promise<BigNumber>;

    finalizeTransaction(
      _transactionid: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    getAgentFee(overrides?: CallOverrides): Promise<BigNumber>;

    getNashFee(overrides?: CallOverrides): Promise<BigNumber>;

    getNextTransactionIndex(overrides?: CallOverrides): Promise<BigNumber>;

    getNextUnpairedTransaction(
      _transactionID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        BigNumber,
        number,
        string,
        string,
        number,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        boolean,
        boolean,
        string,
        string
      ] & {
        id: BigNumber;
        txType: number;
        clientAddress: string;
        agentAddress: string;
        status: number;
        netAmount: BigNumber;
        agentFee: BigNumber;
        nashFee: BigNumber;
        grossAmount: BigNumber;
        agentApproval: boolean;
        clientApproval: boolean;
        agentPhoneNumber: string;
        clientPhoneNumber: string;
      }
    >;

    getTransactionByIndex(
      _transactionID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        BigNumber,
        number,
        string,
        string,
        number,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        boolean,
        boolean,
        string,
        string
      ] & {
        id: BigNumber;
        txType: number;
        clientAddress: string;
        agentAddress: string;
        status: number;
        netAmount: BigNumber;
        agentFee: BigNumber;
        nashFee: BigNumber;
        grossAmount: BigNumber;
        agentApproval: boolean;
        clientApproval: boolean;
        agentPhoneNumber: string;
        clientPhoneNumber: string;
      }
    >;

    getTransactions(
      _paginationCount: BigNumberish,
      _startingPoint: BigNumberish,
      _status: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      ([
        BigNumber,
        number,
        string,
        string,
        number,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        boolean,
        boolean,
        string,
        string
      ] & {
        id: BigNumber;
        txType: number;
        clientAddress: string;
        agentAddress: string;
        status: number;
        netAmount: BigNumber;
        agentFee: BigNumber;
        nashFee: BigNumber;
        grossAmount: BigNumber;
        agentApproval: boolean;
        clientApproval: boolean;
        agentPhoneNumber: string;
        clientPhoneNumber: string;
      })[]
    >;

    initializeDepositTransaction(
      _amount: BigNumberish,
      _phoneNumber: string,
      overrides?: CallOverrides
    ): Promise<void>;

    initializeWithdrawalTransaction(
      _amount: BigNumberish,
      _phoneNumber: string,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    "AgentConfirmationEvent(tuple)"(
      wtx?: null
    ): TypedEventFilter<
      [
        [
          BigNumber,
          number,
          string,
          string,
          number,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          boolean,
          boolean,
          string,
          string
        ] & {
          id: BigNumber;
          txType: number;
          clientAddress: string;
          agentAddress: string;
          status: number;
          netAmount: BigNumber;
          agentFee: BigNumber;
          nashFee: BigNumber;
          grossAmount: BigNumber;
          agentApproval: boolean;
          clientApproval: boolean;
          agentPhoneNumber: string;
          clientPhoneNumber: string;
        }
      ],
      {
        wtx: [
          BigNumber,
          number,
          string,
          string,
          number,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          boolean,
          boolean,
          string,
          string
        ] & {
          id: BigNumber;
          txType: number;
          clientAddress: string;
          agentAddress: string;
          status: number;
          netAmount: BigNumber;
          agentFee: BigNumber;
          nashFee: BigNumber;
          grossAmount: BigNumber;
          agentApproval: boolean;
          clientApproval: boolean;
          agentPhoneNumber: string;
          clientPhoneNumber: string;
        };
      }
    >;

    AgentConfirmationEvent(
      wtx?: null
    ): TypedEventFilter<
      [
        [
          BigNumber,
          number,
          string,
          string,
          number,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          boolean,
          boolean,
          string,
          string
        ] & {
          id: BigNumber;
          txType: number;
          clientAddress: string;
          agentAddress: string;
          status: number;
          netAmount: BigNumber;
          agentFee: BigNumber;
          nashFee: BigNumber;
          grossAmount: BigNumber;
          agentApproval: boolean;
          clientApproval: boolean;
          agentPhoneNumber: string;
          clientPhoneNumber: string;
        }
      ],
      {
        wtx: [
          BigNumber,
          number,
          string,
          string,
          number,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          boolean,
          boolean,
          string,
          string
        ] & {
          id: BigNumber;
          txType: number;
          clientAddress: string;
          agentAddress: string;
          status: number;
          netAmount: BigNumber;
          agentFee: BigNumber;
          nashFee: BigNumber;
          grossAmount: BigNumber;
          agentApproval: boolean;
          clientApproval: boolean;
          agentPhoneNumber: string;
          clientPhoneNumber: string;
        };
      }
    >;

    "AgentPairingEvent(tuple)"(
      wtx?: null
    ): TypedEventFilter<
      [
        [
          BigNumber,
          number,
          string,
          string,
          number,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          boolean,
          boolean,
          string,
          string
        ] & {
          id: BigNumber;
          txType: number;
          clientAddress: string;
          agentAddress: string;
          status: number;
          netAmount: BigNumber;
          agentFee: BigNumber;
          nashFee: BigNumber;
          grossAmount: BigNumber;
          agentApproval: boolean;
          clientApproval: boolean;
          agentPhoneNumber: string;
          clientPhoneNumber: string;
        }
      ],
      {
        wtx: [
          BigNumber,
          number,
          string,
          string,
          number,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          boolean,
          boolean,
          string,
          string
        ] & {
          id: BigNumber;
          txType: number;
          clientAddress: string;
          agentAddress: string;
          status: number;
          netAmount: BigNumber;
          agentFee: BigNumber;
          nashFee: BigNumber;
          grossAmount: BigNumber;
          agentApproval: boolean;
          clientApproval: boolean;
          agentPhoneNumber: string;
          clientPhoneNumber: string;
        };
      }
    >;

    AgentPairingEvent(
      wtx?: null
    ): TypedEventFilter<
      [
        [
          BigNumber,
          number,
          string,
          string,
          number,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          boolean,
          boolean,
          string,
          string
        ] & {
          id: BigNumber;
          txType: number;
          clientAddress: string;
          agentAddress: string;
          status: number;
          netAmount: BigNumber;
          agentFee: BigNumber;
          nashFee: BigNumber;
          grossAmount: BigNumber;
          agentApproval: boolean;
          clientApproval: boolean;
          agentPhoneNumber: string;
          clientPhoneNumber: string;
        }
      ],
      {
        wtx: [
          BigNumber,
          number,
          string,
          string,
          number,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          boolean,
          boolean,
          string,
          string
        ] & {
          id: BigNumber;
          txType: number;
          clientAddress: string;
          agentAddress: string;
          status: number;
          netAmount: BigNumber;
          agentFee: BigNumber;
          nashFee: BigNumber;
          grossAmount: BigNumber;
          agentApproval: boolean;
          clientApproval: boolean;
          agentPhoneNumber: string;
          clientPhoneNumber: string;
        };
      }
    >;

    "ClientConfirmationEvent(tuple)"(
      wtx?: null
    ): TypedEventFilter<
      [
        [
          BigNumber,
          number,
          string,
          string,
          number,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          boolean,
          boolean,
          string,
          string
        ] & {
          id: BigNumber;
          txType: number;
          clientAddress: string;
          agentAddress: string;
          status: number;
          netAmount: BigNumber;
          agentFee: BigNumber;
          nashFee: BigNumber;
          grossAmount: BigNumber;
          agentApproval: boolean;
          clientApproval: boolean;
          agentPhoneNumber: string;
          clientPhoneNumber: string;
        }
      ],
      {
        wtx: [
          BigNumber,
          number,
          string,
          string,
          number,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          boolean,
          boolean,
          string,
          string
        ] & {
          id: BigNumber;
          txType: number;
          clientAddress: string;
          agentAddress: string;
          status: number;
          netAmount: BigNumber;
          agentFee: BigNumber;
          nashFee: BigNumber;
          grossAmount: BigNumber;
          agentApproval: boolean;
          clientApproval: boolean;
          agentPhoneNumber: string;
          clientPhoneNumber: string;
        };
      }
    >;

    ClientConfirmationEvent(
      wtx?: null
    ): TypedEventFilter<
      [
        [
          BigNumber,
          number,
          string,
          string,
          number,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          boolean,
          boolean,
          string,
          string
        ] & {
          id: BigNumber;
          txType: number;
          clientAddress: string;
          agentAddress: string;
          status: number;
          netAmount: BigNumber;
          agentFee: BigNumber;
          nashFee: BigNumber;
          grossAmount: BigNumber;
          agentApproval: boolean;
          clientApproval: boolean;
          agentPhoneNumber: string;
          clientPhoneNumber: string;
        }
      ],
      {
        wtx: [
          BigNumber,
          number,
          string,
          string,
          number,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          boolean,
          boolean,
          string,
          string
        ] & {
          id: BigNumber;
          txType: number;
          clientAddress: string;
          agentAddress: string;
          status: number;
          netAmount: BigNumber;
          agentFee: BigNumber;
          nashFee: BigNumber;
          grossAmount: BigNumber;
          agentApproval: boolean;
          clientApproval: boolean;
          agentPhoneNumber: string;
          clientPhoneNumber: string;
        };
      }
    >;

    "ConfirmationCompletedEvent(tuple)"(
      wtx?: null
    ): TypedEventFilter<
      [
        [
          BigNumber,
          number,
          string,
          string,
          number,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          boolean,
          boolean,
          string,
          string
        ] & {
          id: BigNumber;
          txType: number;
          clientAddress: string;
          agentAddress: string;
          status: number;
          netAmount: BigNumber;
          agentFee: BigNumber;
          nashFee: BigNumber;
          grossAmount: BigNumber;
          agentApproval: boolean;
          clientApproval: boolean;
          agentPhoneNumber: string;
          clientPhoneNumber: string;
        }
      ],
      {
        wtx: [
          BigNumber,
          number,
          string,
          string,
          number,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          boolean,
          boolean,
          string,
          string
        ] & {
          id: BigNumber;
          txType: number;
          clientAddress: string;
          agentAddress: string;
          status: number;
          netAmount: BigNumber;
          agentFee: BigNumber;
          nashFee: BigNumber;
          grossAmount: BigNumber;
          agentApproval: boolean;
          clientApproval: boolean;
          agentPhoneNumber: string;
          clientPhoneNumber: string;
        };
      }
    >;

    ConfirmationCompletedEvent(
      wtx?: null
    ): TypedEventFilter<
      [
        [
          BigNumber,
          number,
          string,
          string,
          number,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          boolean,
          boolean,
          string,
          string
        ] & {
          id: BigNumber;
          txType: number;
          clientAddress: string;
          agentAddress: string;
          status: number;
          netAmount: BigNumber;
          agentFee: BigNumber;
          nashFee: BigNumber;
          grossAmount: BigNumber;
          agentApproval: boolean;
          clientApproval: boolean;
          agentPhoneNumber: string;
          clientPhoneNumber: string;
        }
      ],
      {
        wtx: [
          BigNumber,
          number,
          string,
          string,
          number,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          boolean,
          boolean,
          string,
          string
        ] & {
          id: BigNumber;
          txType: number;
          clientAddress: string;
          agentAddress: string;
          status: number;
          netAmount: BigNumber;
          agentFee: BigNumber;
          nashFee: BigNumber;
          grossAmount: BigNumber;
          agentApproval: boolean;
          clientApproval: boolean;
          agentPhoneNumber: string;
          clientPhoneNumber: string;
        };
      }
    >;

    "TransactionCompletionEvent(tuple)"(
      wtx?: null
    ): TypedEventFilter<
      [
        [
          BigNumber,
          number,
          string,
          string,
          number,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          boolean,
          boolean,
          string,
          string
        ] & {
          id: BigNumber;
          txType: number;
          clientAddress: string;
          agentAddress: string;
          status: number;
          netAmount: BigNumber;
          agentFee: BigNumber;
          nashFee: BigNumber;
          grossAmount: BigNumber;
          agentApproval: boolean;
          clientApproval: boolean;
          agentPhoneNumber: string;
          clientPhoneNumber: string;
        }
      ],
      {
        wtx: [
          BigNumber,
          number,
          string,
          string,
          number,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          boolean,
          boolean,
          string,
          string
        ] & {
          id: BigNumber;
          txType: number;
          clientAddress: string;
          agentAddress: string;
          status: number;
          netAmount: BigNumber;
          agentFee: BigNumber;
          nashFee: BigNumber;
          grossAmount: BigNumber;
          agentApproval: boolean;
          clientApproval: boolean;
          agentPhoneNumber: string;
          clientPhoneNumber: string;
        };
      }
    >;

    TransactionCompletionEvent(
      wtx?: null
    ): TypedEventFilter<
      [
        [
          BigNumber,
          number,
          string,
          string,
          number,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          boolean,
          boolean,
          string,
          string
        ] & {
          id: BigNumber;
          txType: number;
          clientAddress: string;
          agentAddress: string;
          status: number;
          netAmount: BigNumber;
          agentFee: BigNumber;
          nashFee: BigNumber;
          grossAmount: BigNumber;
          agentApproval: boolean;
          clientApproval: boolean;
          agentPhoneNumber: string;
          clientPhoneNumber: string;
        }
      ],
      {
        wtx: [
          BigNumber,
          number,
          string,
          string,
          number,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          boolean,
          boolean,
          string,
          string
        ] & {
          id: BigNumber;
          txType: number;
          clientAddress: string;
          agentAddress: string;
          status: number;
          netAmount: BigNumber;
          agentFee: BigNumber;
          nashFee: BigNumber;
          grossAmount: BigNumber;
          agentApproval: boolean;
          clientApproval: boolean;
          agentPhoneNumber: string;
          clientPhoneNumber: string;
        };
      }
    >;

    "TransactionInitEvent(tuple)"(
      wtx?: null
    ): TypedEventFilter<
      [
        [
          BigNumber,
          number,
          string,
          string,
          number,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          boolean,
          boolean,
          string,
          string
        ] & {
          id: BigNumber;
          txType: number;
          clientAddress: string;
          agentAddress: string;
          status: number;
          netAmount: BigNumber;
          agentFee: BigNumber;
          nashFee: BigNumber;
          grossAmount: BigNumber;
          agentApproval: boolean;
          clientApproval: boolean;
          agentPhoneNumber: string;
          clientPhoneNumber: string;
        }
      ],
      {
        wtx: [
          BigNumber,
          number,
          string,
          string,
          number,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          boolean,
          boolean,
          string,
          string
        ] & {
          id: BigNumber;
          txType: number;
          clientAddress: string;
          agentAddress: string;
          status: number;
          netAmount: BigNumber;
          agentFee: BigNumber;
          nashFee: BigNumber;
          grossAmount: BigNumber;
          agentApproval: boolean;
          clientApproval: boolean;
          agentPhoneNumber: string;
          clientPhoneNumber: string;
        };
      }
    >;

    TransactionInitEvent(
      wtx?: null
    ): TypedEventFilter<
      [
        [
          BigNumber,
          number,
          string,
          string,
          number,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          boolean,
          boolean,
          string,
          string
        ] & {
          id: BigNumber;
          txType: number;
          clientAddress: string;
          agentAddress: string;
          status: number;
          netAmount: BigNumber;
          agentFee: BigNumber;
          nashFee: BigNumber;
          grossAmount: BigNumber;
          agentApproval: boolean;
          clientApproval: boolean;
          agentPhoneNumber: string;
          clientPhoneNumber: string;
        }
      ],
      {
        wtx: [
          BigNumber,
          number,
          string,
          string,
          number,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          boolean,
          boolean,
          string,
          string
        ] & {
          id: BigNumber;
          txType: number;
          clientAddress: string;
          agentAddress: string;
          status: number;
          netAmount: BigNumber;
          agentFee: BigNumber;
          nashFee: BigNumber;
          grossAmount: BigNumber;
          agentApproval: boolean;
          clientApproval: boolean;
          agentPhoneNumber: string;
          clientPhoneNumber: string;
        };
      }
    >;
  };

  estimateGas: {
    agentAcceptDepositTransaction(
      _transactionid: BigNumberish,
      _phoneNumber: string,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    agentAcceptWithdrawalTransaction(
      _transactionid: BigNumberish,
      _phoneNumber: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    agentConfirmPayment(
      _transactionid: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    clientConfirmPayment(
      _transactionid: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    countSuccessfulTransactions(overrides?: CallOverrides): Promise<BigNumber>;

    finalizeTransaction(
      _transactionid: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    getAgentFee(overrides?: CallOverrides): Promise<BigNumber>;

    getNashFee(overrides?: CallOverrides): Promise<BigNumber>;

    getNextTransactionIndex(overrides?: CallOverrides): Promise<BigNumber>;

    getNextUnpairedTransaction(
      _transactionID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getTransactionByIndex(
      _transactionID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getTransactions(
      _paginationCount: BigNumberish,
      _startingPoint: BigNumberish,
      _status: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    initializeDepositTransaction(
      _amount: BigNumberish,
      _phoneNumber: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    initializeWithdrawalTransaction(
      _amount: BigNumberish,
      _phoneNumber: string,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    agentAcceptDepositTransaction(
      _transactionid: BigNumberish,
      _phoneNumber: string,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    agentAcceptWithdrawalTransaction(
      _transactionid: BigNumberish,
      _phoneNumber: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    agentConfirmPayment(
      _transactionid: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    clientConfirmPayment(
      _transactionid: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    countSuccessfulTransactions(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    finalizeTransaction(
      _transactionid: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    getAgentFee(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getNashFee(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getNextTransactionIndex(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getNextUnpairedTransaction(
      _transactionID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getTransactionByIndex(
      _transactionID: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getTransactions(
      _paginationCount: BigNumberish,
      _startingPoint: BigNumberish,
      _status: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    initializeDepositTransaction(
      _amount: BigNumberish,
      _phoneNumber: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    initializeWithdrawalTransaction(
      _amount: BigNumberish,
      _phoneNumber: string,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;
  };
}
