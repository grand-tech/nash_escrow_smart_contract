/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { CUSD, CUSDInterface } from "../../contracts/CUSD";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "initialSupply",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "tokenName",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "decimalUnits",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "tokenSymbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Burn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "MintingFinished",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "creator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "destroyer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "finishMinting",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mintingFinished",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_receivers",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_values",
        type: "uint256[]",
      },
    ],
    name: "multiTransfer",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_receivers",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "multiTransferSingleValue",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_creator",
        type: "address",
      },
    ],
    name: "setCreator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_destroyer",
        type: "address",
      },
    ],
    name: "setDestroyer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526007805460ff191690553480156200001b57600080fd5b5060405162001669380380620016698339810160408190526200003e9162000169565b336000908152600560205260408120859055600385905562000061848262000289565b50600162000070828262000289565b50506002805460ff90921660ff199092169190911790555050600480546001600160a01b0319163317905562000355565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620000c957600080fd5b81516001600160401b0380821115620000e657620000e6620000a1565b604051601f8301601f19908116603f01168101908282118183101715620001115762000111620000a1565b81604052838152602092508660208588010111156200012f57600080fd5b600091505b8382101562000153578582018301518183018401529082019062000134565b6000602085830101528094505050505092915050565b600080600080608085870312156200018057600080fd5b845160208601519094506001600160401b0380821115620001a057600080fd5b620001ae88838901620000b7565b94506040870151915060ff82168214620001c757600080fd5b606087015191935080821115620001dd57600080fd5b50620001ec87828801620000b7565b91505092959194509250565b600181811c908216806200020d57607f821691505b6020821081036200022e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111562000284576000816000526020600020601f850160051c810160208610156200025f5750805b601f850160051c820191505b8181101562000280578281556001016200026b565b5050505b505050565b81516001600160401b03811115620002a557620002a5620000a1565b620002bd81620002b68454620001f8565b8462000234565b602080601f831160018114620002f55760008415620002dc5750858301515b600019600386901b1c1916600185901b17855562000280565b600085815260208120601f198616915b82811015620003265788860151825594840194600190910190840162000305565b5085821015620003455787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61130480620003656000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c806340c10f19116100b85780637d64bcb41161007c5780637d64bcb4146102a65780638da5cb5b146102ae57806395d89b41146102c1578063a9059cbb146102c9578063dd62ed3e146102dc578063f2fde38b1461030757600080fd5b806340c10f191461023a57806342966c681461024d5780635e1648cb146102605780636a7301b81461027357806370a082311461028657600080fd5b806318160ddd116100ff57806318160ddd146101c95780631e89d545146101e057806323b872dd146101f3578063313ce567146102065780633f5160181461022557600080fd5b806302d05d3f1461013c57806305d2035b1461017157806306fdde031461018e578063095ea7b3146101a357806311367b26146101b6575b600080fd5b6007546101549061010090046001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b60075461017e9060ff1681565b6040519015158152602001610168565b61019661031a565b6040516101689190610ec5565b61017e6101b1366004610f30565b6103a8565b600854610154906001600160a01b031681565b6101d260035481565b604051908152602001610168565b61017e6101ee36600461103b565b610455565b61017e6102013660046110f6565b6104fa565b6002546102139060ff1681565b60405160ff9091168152602001610168565b610238610233366004611132565b61078c565b005b61017e610248366004610f30565b6107f1565b61023861025b36600461114d565b61091c565b61017e61026e366004611166565b6109ec565b610238610281366004611132565b610a89565b6101d2610294366004611132565b60056020526000908152604090205481565b61017e610ae8565b600454610154906001600160a01b031681565b610196610b43565b61017e6102d7366004610f30565b610b50565b6101d26102ea3660046111ab565b600660209081526000928352604080842090915290825290205481565b610238610315366004611132565b610d8a565b60008054610327906111de565b80601f0160208091040260200160405190810160405280929190818152602001828054610353906111de565b80156103a05780601f10610375576101008083540402835291602001916103a0565b820191906000526020600020905b81548152906001019060200180831161038357829003601f168201915b505050505081565b60008082116103f05760405162461bcd60e51b815260206004820152600f60248201526e43616e6e6f7420757365207a65726f60881b60448201526064015b60405180910390fd5b3360008181526006602090815260408083206001600160a01b03881680855290835292819020869055518581529192917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a35060015b92915050565b600060c88351111561049f5760405162461bcd60e51b8152602060048201526013602482015272546f6f206d616e7920726563697069656e747360681b60448201526064016103e7565b60005b83518110156104f0576104e78482815181106104c0576104c0611218565b60200260200101518483815181106104da576104da611218565b6020026020010151610b50565b506001016104a2565b5060019392505050565b60006001600160a01b0383166105225760405162461bcd60e51b81526004016103e79061122e565b6000821161056a5760405162461bcd60e51b815260206004820152601560248201527443616e6e6f7420757365207a65726f2076616c756560581b60448201526064016103e7565b6001600160a01b0384166000908152600560205260409020548211156105c75760405162461bcd60e51b8152602060048201526012602482015271084c2d8c2dcc6ca40dcdee840cadcdeeaced60731b60448201526064016103e7565b6001600160a01b0383166000908152600560205260409020546105ea838261127b565b116106295760405162461bcd60e51b815260206004820152600f60248201526e43616e6e6f74206f766572666c6f7760881b60448201526064016103e7565b6001600160a01b03841660009081526006602090815260408083203384529091529020548211156106945760405162461bcd60e51b815260206004820152601560248201527443616e6e6f74206f76657220616c6c6f77616e636560581b60448201526064016103e7565b6001600160a01b0384166000908152600560205260409020546106b79083610df9565b6001600160a01b0380861660009081526005602052604080822093909355908516815220546106e69083610e5f565b6001600160a01b0380851660009081526005602090815260408083209490945591871681526006825282812033825290915220546107249083610df9565b6001600160a01b03858116600081815260066020908152604080832033845282529182902094909455518581529186169290917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35060019392505050565b6004546001600160a01b031633146107a357600080fd5b6001600160a01b0381166107c95760405162461bcd60e51b81526004016103e79061122e565b600780546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b60075460009061010090046001600160a01b0316331461081057600080fd5b60075460ff161561082057600080fd5b6001600160a01b0383166108465760405162461bcd60e51b81526004016103e79061122e565b6001600160a01b038316600090815260056020526040902054610869838261127b565b1161087357600080fd5b600354610880838261127b565b1161088a57600080fd5b61089660035483610e5f565b6003556001600160a01b0383166000908152600560205260409020546108bc9083610e5f565b6001600160a01b038416600081815260056020526040908190209290925590517f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d41213968859061090b9085815260200190565b60405180910390a250600192915050565b6008546001600160a01b0316331461093357600080fd5b6008546001600160a01b0316600090815260056020526040902054811180159061095d5750600081115b61096657600080fd5b6008546001600160a01b031660009081526005602052604090205461098b9082610df9565b6008546001600160a01b03166000908152600560205260409020556003546109b39082610df9565b6003556040518181527fb90306ad06b2a6ff86ddc9327db583062895ef6540e62dc50add009db5b356eb9060200160405180910390a150565b6000806109fc83620f424061128e565b905060c884511115610a465760405162461bcd60e51b8152602060048201526013602482015272546f6f206d616e7920726563697069656e747360681b60448201526064016103e7565b60005b8451811015610a7e57610a75858281518110610a6757610a67611218565b602002602001015183610b50565b50600101610a49565b506001949350505050565b6004546001600160a01b03163314610aa057600080fd5b6001600160a01b038116610ac65760405162461bcd60e51b81526004016103e79061122e565b600880546001600160a01b0319166001600160a01b0392909216919091179055565b60075460009061010090046001600160a01b03163314610b0757600080fd5b6007805460ff191660011790556040517fb828d9b5c78095deeeeff2eca2e5d4fe046ce3feb4c99702624a3fd384ad2dbc90600090a150600190565b60018054610327906111de565b6000306001600160a01b03841603610b6757600080fd5b6001600160a01b038316610b8d5760405162461bcd60e51b81526004016103e79061122e565b60008211610bd55760405162461bcd60e51b815260206004820152601560248201527443616e6e6f7420757365207a65726f2076616c756560581b60448201526064016103e7565b33600090815260056020526040902054821115610c295760405162461bcd60e51b8152602060048201526012602482015271084c2d8c2dcc6ca40dcdee840cadcdeeaced60731b60448201526064016103e7565b6001600160a01b038316600090815260056020526040902054610c4c838261127b565b1015610c855760405162461bcd60e51b81526020600482015260086024820152674f766572666c6f7760c01b60448201526064016103e7565b6001600160a01b0383166000908152600560205260408082205433835290822054610cb0919061127b565b33600090815260056020526040902054909150610ccd9084610df9565b33600090815260056020526040808220929092556001600160a01b03861681522054610cf99084610e5f565b6001600160a01b0385166000818152600560205260409081902092909255905133907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610d4a9087815260200190565b60405180910390a36001600160a01b038416600090815260056020526040808220543383529120548291610d7d9161127b565b146104f0576104f06112a5565b6001600160a01b038116610d9d57600080fd5b6004546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600480546001600160a01b0319166001600160a01b0392909216919091179055565b600082821115610e4b5760405162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f77000060448201526064016103e7565b6000610e5783856112bb565b949350505050565b600080610e6c838561127b565b905083811015610ebe5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016103e7565b9392505050565b60006020808352835180602085015260005b81811015610ef357858101830151858201604001528201610ed7565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610f2b57600080fd5b919050565b60008060408385031215610f4357600080fd5b610f4c83610f14565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610f9957610f99610f5a565b604052919050565b600067ffffffffffffffff821115610fbb57610fbb610f5a565b5060051b60200190565b600082601f830112610fd657600080fd5b81356020610feb610fe683610fa1565b610f70565b8083825260208201915060208460051b87010193508684111561100d57600080fd5b602086015b848110156110305761102381610f14565b8352918301918301611012565b509695505050505050565b6000806040838503121561104e57600080fd5b823567ffffffffffffffff8082111561106657600080fd5b61107286838701610fc5565b935060209150818501358181111561108957600080fd5b85019050601f8101861361109c57600080fd5b80356110aa610fe682610fa1565b81815260059190911b820183019083810190888311156110c957600080fd5b928401925b828410156110e7578335825292840192908401906110ce565b80955050505050509250929050565b60008060006060848603121561110b57600080fd5b61111484610f14565b925061112260208501610f14565b9150604084013590509250925092565b60006020828403121561114457600080fd5b610ebe82610f14565b60006020828403121561115f57600080fd5b5035919050565b6000806040838503121561117957600080fd5b823567ffffffffffffffff81111561119057600080fd5b61119c85828601610fc5565b95602094909401359450505050565b600080604083850312156111be57600080fd5b6111c783610f14565b91506111d560208401610f14565b90509250929050565b600181811c908216806111f257607f821691505b60208210810361121257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b60208082526017908201527f43616e6e6f7420757365207a65726f2061646472657373000000000000000000604082015260600190565b634e487b7160e01b600052601160045260246000fd5b8082018082111561044f5761044f611265565b808202811582820484141761044f5761044f611265565b634e487b7160e01b600052600160045260246000fd5b8181038181111561044f5761044f61126556fea2646970667358221220313cd479023bbc87aa9e9340e9f981361c7f4891abf59e43478981a8e1c7e70d64736f6c63430008180033";

type CUSDConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CUSDConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CUSD__factory extends ContractFactory {
  constructor(...args: CUSDConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    initialSupply: PromiseOrValue<BigNumberish>,
    tokenName: PromiseOrValue<string>,
    decimalUnits: PromiseOrValue<BigNumberish>,
    tokenSymbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CUSD> {
    return super.deploy(
      initialSupply,
      tokenName,
      decimalUnits,
      tokenSymbol,
      overrides || {}
    ) as Promise<CUSD>;
  }
  override getDeployTransaction(
    initialSupply: PromiseOrValue<BigNumberish>,
    tokenName: PromiseOrValue<string>,
    decimalUnits: PromiseOrValue<BigNumberish>,
    tokenSymbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      initialSupply,
      tokenName,
      decimalUnits,
      tokenSymbol,
      overrides || {}
    );
  }
  override attach(address: string): CUSD {
    return super.attach(address) as CUSD;
  }
  override connect(signer: Signer): CUSD__factory {
    return super.connect(signer) as CUSD__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CUSDInterface {
    return new utils.Interface(_abi) as CUSDInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): CUSD {
    return new Contract(address, _abi, signerOrProvider) as CUSD;
  }
}
