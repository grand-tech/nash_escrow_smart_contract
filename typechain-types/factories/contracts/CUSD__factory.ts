/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { CUSD, CUSDInterface } from "../../contracts/CUSD";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "initialSupply",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "tokenName",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "decimalUnits",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "tokenSymbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Burn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "MintingFinished",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "creator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "destroyer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "finishMinting",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mintingFinished",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_receivers",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_values",
        type: "uint256[]",
      },
    ],
    name: "multiTransfer",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_receivers",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "multiTransferSingleValue",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_creator",
        type: "address",
      },
    ],
    name: "setCreator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_destroyer",
        type: "address",
      },
    ],
    name: "setDestroyer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526000600760006101000a81548160ff0219169083151502179055503480156200002c57600080fd5b5060405162002f7838038062002f78833981810160405281019062000052919062000333565b83600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550836003819055508260009081620000ae919062000624565b508060019081620000c0919062000624565b5081600260006101000a81548160ff021916908360ff16021790555033600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050506200070b565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b62000150816200013b565b81146200015c57600080fd5b50565b600081519050620001708162000145565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620001cb8262000180565b810181811067ffffffffffffffff82111715620001ed57620001ec62000191565b5b80604052505050565b60006200020262000127565b9050620002108282620001c0565b919050565b600067ffffffffffffffff82111562000233576200023262000191565b5b6200023e8262000180565b9050602081019050919050565b60005b838110156200026b5780820151818401526020810190506200024e565b60008484015250505050565b60006200028e620002888462000215565b620001f6565b905082815260208101848484011115620002ad57620002ac6200017b565b5b620002ba8482856200024b565b509392505050565b600082601f830112620002da57620002d962000176565b5b8151620002ec84826020860162000277565b91505092915050565b600060ff82169050919050565b6200030d81620002f5565b81146200031957600080fd5b50565b6000815190506200032d8162000302565b92915050565b6000806000806080858703121562000350576200034f62000131565b5b600062000360878288016200015f565b945050602085015167ffffffffffffffff81111562000384576200038362000136565b5b6200039287828801620002c2565b9350506040620003a5878288016200031c565b925050606085015167ffffffffffffffff811115620003c957620003c862000136565b5b620003d787828801620002c2565b91505092959194509250565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200043657607f821691505b6020821081036200044c576200044b620003ee565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620004b67fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000477565b620004c2868362000477565b95508019841693508086168417925050509392505050565b6000819050919050565b600062000505620004ff620004f9846200013b565b620004da565b6200013b565b9050919050565b6000819050919050565b6200052183620004e4565b6200053962000530826200050c565b84845462000484565b825550505050565b600090565b6200055062000541565b6200055d81848462000516565b505050565b5b8181101562000585576200057960008262000546565b60018101905062000563565b5050565b601f821115620005d4576200059e8162000452565b620005a98462000467565b81016020851015620005b9578190505b620005d1620005c88562000467565b83018262000562565b50505b505050565b600082821c905092915050565b6000620005f960001984600802620005d9565b1980831691505092915050565b6000620006148383620005e6565b9150826002028217905092915050565b6200062f82620003e3565b67ffffffffffffffff8111156200064b576200064a62000191565b5b6200065782546200041d565b6200066482828562000589565b600060209050601f8311600181146200069c576000841562000687578287015190505b62000693858262000606565b86555062000703565b601f198416620006ac8662000452565b60005b82811015620006d657848901518255600182019150602085019450602081019050620006af565b86831015620006f65784890151620006f2601f891682620005e6565b8355505b6001600288020188555050505b505050505050565b61285d806200071b6000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c806340c10f19116100b85780637d64bcb41161007c5780637d64bcb4146103645780638da5cb5b1461038257806395d89b41146103a0578063a9059cbb146103be578063dd62ed3e146103ee578063f2fde38b1461041e57610137565b806340c10f191461029c57806342966c68146102cc5780635e1648cb146102e85780636a7301b81461031857806370a082311461033457610137565b806318160ddd116100ff57806318160ddd146101e45780631e89d5451461020257806323b872dd14610232578063313ce567146102625780633f5160181461028057610137565b806302d05d3f1461013c57806305d2035b1461015a57806306fdde0314610178578063095ea7b31461019657806311367b26146101c6575b600080fd5b61014461043a565b6040516101519190611c2a565b60405180910390f35b610162610460565b60405161016f9190611c60565b60405180910390f35b610180610473565b60405161018d9190611d0b565b60405180910390f35b6101b060048036038101906101ab9190611da3565b610501565b6040516101bd9190611c60565b60405180910390f35b6101ce610635565b6040516101db9190611c2a565b60405180910390f35b6101ec61065b565b6040516101f99190611df2565b60405180910390f35b61021c60048036038101906102179190612018565b610661565b6040516102299190611c60565b60405180910390f35b61024c60048036038101906102479190612090565b610711565b6040516102599190611c60565b60405180910390f35b61026a610c5e565b60405161027791906120ff565b60405180910390f35b61029a6004803603810190610295919061211a565b610c71565b005b6102b660048036038101906102b19190611da3565b610d7e565b6040516102c39190611c60565b60405180910390f35b6102e660048036038101906102e19190612147565b611009565b005b61030260048036038101906102fd9190612174565b6111f9565b60405161030f9190611c60565b60405180910390f35b610332600480360381019061032d919061211a565b6112a2565b005b61034e6004803603810190610349919061211a565b6113af565b60405161035b9190611df2565b60405180910390f35b61036c6113c7565b6040516103799190611c60565b60405180910390f35b61038a611471565b6040516103979190611c2a565b60405180910390f35b6103a8611497565b6040516103b59190611d0b565b60405180910390f35b6103d860048036038101906103d39190611da3565b611525565b6040516103e59190611c60565b60405180910390f35b610408600480360381019061040391906121d0565b611a0e565b6040516104159190611df2565b60405180910390f35b6104386004803603810190610433919061211a565b611a33565b005b600760019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600760009054906101000a900460ff1681565b600080546104809061223f565b80601f01602080910402602001604051908101604052809291908181526020018280546104ac9061223f565b80156104f95780601f106104ce576101008083540402835291602001916104f9565b820191906000526020600020905b8154815290600101906020018083116104dc57829003601f168201915b505050505081565b6000808211610545576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053c906122bc565b60405180910390fd5b81600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516106239190611df2565b60405180910390a36001905092915050565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035481565b600060c8835111156106a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069f90612328565b60405180910390fd5b60005b8351811015610706576106f28482815181106106ca576106c9612348565b5b60200260200101518483815181106106e5576106e4612348565b5b6020026020010151611525565b5080806106fe906123a6565b9150506106ab565b506001905092915050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610781576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107789061243a565b60405180910390fd5b600082116107c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107bb906124a6565b60405180910390fd5b81600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610846576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083d90612512565b60405180910390fd5b600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546108d19190612532565b11610911576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610908906125b2565b60405180910390fd5b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211156109d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c79061261e565b60405180910390fd5b610a19600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483611b2c565b600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610aa5600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483611b8b565b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610b6e600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483611b2c565b600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610c4b9190611df2565b60405180910390a3600190509392505050565b600260009054906101000a900460ff1681565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ccb57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610d3a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d319061243a565b60405180910390fd5b80600760016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600760019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610dda57600080fd5b600760009054906101000a900460ff1615610df457600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610e63576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e5a9061243a565b60405180910390fd5b600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610eee9190612532565b11610ef857600080fd5b60035482600354610f099190612532565b11610f1357600080fd5b610f1f60035483611b8b565b600381905550610f6e600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483611b8b565b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff167f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d412139688583604051610ff79190611df2565b60405180910390a26001905092915050565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461106357600080fd5b8060056000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101580156110d45750600081115b6110dd57600080fd5b61114860056000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482611b2c565b60056000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506111b960035482611b2c565b6003819055507fb90306ad06b2a6ff86ddc9327db583062895ef6540e62dc50add009db5b356eb816040516111ee9190611df2565b60405180910390a150565b600080620f42408361120b919061263e565b905060c884511115611252576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161124990612328565b60405180910390fd5b60005b84518110156112965761128285828151811061127457611273612348565b5b602002602001015183611525565b50808061128e906123a6565b915050611255565b50600191505092915050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146112fc57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361136b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113629061243a565b60405180910390fd5b80600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60056020528060005260406000206000915090505481565b6000600760019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461142357600080fd5b6001600760006101000a81548160ff0219169083151502179055507fb828d9b5c78095deeeeff2eca2e5d4fe046ce3feb4c99702624a3fd384ad2dbc60405160405180910390a16001905090565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600180546114a49061223f565b80601f01602080910402602001604051908101604052809291908181526020018280546114d09061223f565b801561151d5780601f106114f25761010080835404028352916020019161151d565b820191906000526020600020905b81548152906001019060200180831161150057829003601f168201915b505050505081565b60003073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361155f57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036115ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115c59061243a565b60405180910390fd5b60008211611611576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611608906124a6565b60405180910390fd5b81600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015611693576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161168a90612512565b60405180910390fd5b600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461171e9190612532565b101561175f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611756906126cc565b60405180910390fd5b6000600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546117eb9190612532565b9050611836600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205484611b2c565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506118c2600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205484611b8b565b600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040516119629190611df2565b60405180910390a380600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546119f59190612532565b14611a0357611a026126ec565b5b600191505092915050565b6006602052816000526040600020602052806000526040600020600091509150505481565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611a6c57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600082821115611b71576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b6890612767565b60405180910390fd5b60008284611b7f9190612787565b90508091505092915050565b6000808284611b9a9190612532565b905083811015611bdf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bd690612807565b60405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611c1482611be9565b9050919050565b611c2481611c09565b82525050565b6000602082019050611c3f6000830184611c1b565b92915050565b60008115159050919050565b611c5a81611c45565b82525050565b6000602082019050611c756000830184611c51565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611cb5578082015181840152602081019050611c9a565b60008484015250505050565b6000601f19601f8301169050919050565b6000611cdd82611c7b565b611ce78185611c86565b9350611cf7818560208601611c97565b611d0081611cc1565b840191505092915050565b60006020820190508181036000830152611d258184611cd2565b905092915050565b6000604051905090565b600080fd5b600080fd5b611d4a81611c09565b8114611d5557600080fd5b50565b600081359050611d6781611d41565b92915050565b6000819050919050565b611d8081611d6d565b8114611d8b57600080fd5b50565b600081359050611d9d81611d77565b92915050565b60008060408385031215611dba57611db9611d37565b5b6000611dc885828601611d58565b9250506020611dd985828601611d8e565b9150509250929050565b611dec81611d6d565b82525050565b6000602082019050611e076000830184611de3565b92915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611e4a82611cc1565b810181811067ffffffffffffffff82111715611e6957611e68611e12565b5b80604052505050565b6000611e7c611d2d565b9050611e888282611e41565b919050565b600067ffffffffffffffff821115611ea857611ea7611e12565b5b602082029050602081019050919050565b600080fd5b6000611ed1611ecc84611e8d565b611e72565b90508083825260208201905060208402830185811115611ef457611ef3611eb9565b5b835b81811015611f1d5780611f098882611d58565b845260208401935050602081019050611ef6565b5050509392505050565b600082601f830112611f3c57611f3b611e0d565b5b8135611f4c848260208601611ebe565b91505092915050565b600067ffffffffffffffff821115611f7057611f6f611e12565b5b602082029050602081019050919050565b6000611f94611f8f84611f55565b611e72565b90508083825260208201905060208402830185811115611fb757611fb6611eb9565b5b835b81811015611fe05780611fcc8882611d8e565b845260208401935050602081019050611fb9565b5050509392505050565b600082601f830112611fff57611ffe611e0d565b5b813561200f848260208601611f81565b91505092915050565b6000806040838503121561202f5761202e611d37565b5b600083013567ffffffffffffffff81111561204d5761204c611d3c565b5b61205985828601611f27565b925050602083013567ffffffffffffffff81111561207a57612079611d3c565b5b61208685828601611fea565b9150509250929050565b6000806000606084860312156120a9576120a8611d37565b5b60006120b786828701611d58565b93505060206120c886828701611d58565b92505060406120d986828701611d8e565b9150509250925092565b600060ff82169050919050565b6120f9816120e3565b82525050565b600060208201905061211460008301846120f0565b92915050565b6000602082840312156121305761212f611d37565b5b600061213e84828501611d58565b91505092915050565b60006020828403121561215d5761215c611d37565b5b600061216b84828501611d8e565b91505092915050565b6000806040838503121561218b5761218a611d37565b5b600083013567ffffffffffffffff8111156121a9576121a8611d3c565b5b6121b585828601611f27565b92505060206121c685828601611d8e565b9150509250929050565b600080604083850312156121e7576121e6611d37565b5b60006121f585828601611d58565b925050602061220685828601611d58565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061225757607f821691505b60208210810361226a57612269612210565b5b50919050565b7f43616e6e6f7420757365207a65726f0000000000000000000000000000000000600082015250565b60006122a6600f83611c86565b91506122b182612270565b602082019050919050565b600060208201905081810360008301526122d581612299565b9050919050565b7f546f6f206d616e7920726563697069656e747300000000000000000000000000600082015250565b6000612312601383611c86565b915061231d826122dc565b602082019050919050565b6000602082019050818103600083015261234181612305565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006123b182611d6d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036123e3576123e2612377565b5b600182019050919050565b7f43616e6e6f7420757365207a65726f2061646472657373000000000000000000600082015250565b6000612424601783611c86565b915061242f826123ee565b602082019050919050565b6000602082019050818103600083015261245381612417565b9050919050565b7f43616e6e6f7420757365207a65726f2076616c75650000000000000000000000600082015250565b6000612490601583611c86565b915061249b8261245a565b602082019050919050565b600060208201905081810360008301526124bf81612483565b9050919050565b7f42616c616e6365206e6f7420656e6f7567680000000000000000000000000000600082015250565b60006124fc601283611c86565b9150612507826124c6565b602082019050919050565b6000602082019050818103600083015261252b816124ef565b9050919050565b600061253d82611d6d565b915061254883611d6d565b92508282019050808211156125605761255f612377565b5b92915050565b7f43616e6e6f74206f766572666c6f770000000000000000000000000000000000600082015250565b600061259c600f83611c86565b91506125a782612566565b602082019050919050565b600060208201905081810360008301526125cb8161258f565b9050919050565b7f43616e6e6f74206f76657220616c6c6f77616e63650000000000000000000000600082015250565b6000612608601583611c86565b9150612613826125d2565b602082019050919050565b60006020820190508181036000830152612637816125fb565b9050919050565b600061264982611d6d565b915061265483611d6d565b925082820261266281611d6d565b9150828204841483151761267957612678612377565b5b5092915050565b7f4f766572666c6f77000000000000000000000000000000000000000000000000600082015250565b60006126b6600883611c86565b91506126c182612680565b602082019050919050565b600060208201905081810360008301526126e5816126a9565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b7f536166654d6174683a207375627472616374696f6e206f766572666c6f770000600082015250565b6000612751601e83611c86565b915061275c8261271b565b602082019050919050565b6000602082019050818103600083015261278081612744565b9050919050565b600061279282611d6d565b915061279d83611d6d565b92508282039050818111156127b5576127b4612377565b5b92915050565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000600082015250565b60006127f1601b83611c86565b91506127fc826127bb565b602082019050919050565b60006020820190508181036000830152612820816127e4565b905091905056fea2646970667358221220aaa040f58aeda6bb4767d070e71e708d5890c925a9b932bfb3139161ee22b62c64736f6c63430008110033";

type CUSDConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CUSDConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CUSD__factory extends ContractFactory {
  constructor(...args: CUSDConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    initialSupply: PromiseOrValue<BigNumberish>,
    tokenName: PromiseOrValue<string>,
    decimalUnits: PromiseOrValue<BigNumberish>,
    tokenSymbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CUSD> {
    return super.deploy(
      initialSupply,
      tokenName,
      decimalUnits,
      tokenSymbol,
      overrides || {}
    ) as Promise<CUSD>;
  }
  override getDeployTransaction(
    initialSupply: PromiseOrValue<BigNumberish>,
    tokenName: PromiseOrValue<string>,
    decimalUnits: PromiseOrValue<BigNumberish>,
    tokenSymbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      initialSupply,
      tokenName,
      decimalUnits,
      tokenSymbol,
      overrides || {}
    );
  }
  override attach(address: string): CUSD {
    return super.attach(address) as CUSD;
  }
  override connect(signer: Signer): CUSD__factory {
    return super.connect(signer) as CUSD__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CUSDInterface {
    return new utils.Interface(_abi) as CUSDInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): CUSD {
    return new Contract(address, _abi, signerOrProvider) as CUSD;
  }
}
