/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { CUSD, CUSDInterface } from "../../contracts/CUSD";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "initialSupply",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "tokenName",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "decimalUnits",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "tokenSymbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Burn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "MintingFinished",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "creator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "destroyer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "finishMinting",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mintingFinished",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_receivers",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_values",
        type: "uint256[]",
      },
    ],
    name: "multiTransfer",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_receivers",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "multiTransferSingleValue",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_creator",
        type: "address",
      },
    ],
    name: "setCreator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_destroyer",
        type: "address",
      },
    ],
    name: "setDestroyer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526007805460ff191690553480156200001b57600080fd5b5060405162001653380380620016538339810160408190526200003e916200020c565b336000908152600560209081526040822086905560038690558451620000689291860190620000af565b5080516200007e906001906020840190620000af565b50506002805460ff90921660ff199092169190911790555050600480546001600160a01b03191633179055620002ee565b828054620000bd906200029b565b90600052602060002090601f016020900481019282620000e157600085556200012c565b82601f10620000fc57805160ff19168380011785556200012c565b828001600101855582156200012c579182015b828111156200012c5782518255916020019190600101906200010f565b506200013a9291506200013e565b5090565b5b808211156200013a57600081556001016200013f565b600082601f8301126200016757600080fd5b81516001600160401b0380821115620001845762000184620002d8565b604051601f8301601f19908116603f01168101908282118183101715620001af57620001af620002d8565b81604052838152602092508683858801011115620001cc57600080fd5b600091505b83821015620001f05785820183015181830184015290820190620001d1565b83821115620002025760008385830101525b9695505050505050565b600080600080608085870312156200022357600080fd5b845160208601519094506001600160401b03808211156200024357600080fd5b620002518883890162000155565b94506040870151915060ff821682146200026a57600080fd5b6060870151919350808211156200028057600080fd5b506200028f8782880162000155565b91505092959194509250565b600181811c90821680620002b057607f821691505b60208210811415620002d257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b61135580620002fe6000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c806340c10f19116100b85780637d64bcb41161007c5780637d64bcb4146102a65780638da5cb5b146102ae57806395d89b41146102c1578063a9059cbb146102c9578063dd62ed3e146102dc578063f2fde38b1461030757600080fd5b806340c10f191461023a57806342966c681461024d5780635e1648cb146102605780636a7301b81461027357806370a082311461028657600080fd5b806318160ddd116100ff57806318160ddd146101c95780631e89d545146101e057806323b872dd146101f3578063313ce567146102065780633f5160181461022557600080fd5b806302d05d3f1461013c57806305d2035b1461017157806306fdde031461018e578063095ea7b3146101a357806311367b26146101b6575b600080fd5b6007546101549061010090046001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b60075461017e9060ff1681565b6040519015158152602001610168565b61019661031a565b6040516101689190611142565b61017e6101b1366004610ff8565b6103a8565b600854610154906001600160a01b031681565b6101d260035481565b604051908152602001610168565b61017e6101ee366004611022565b610454565b61017e610201366004610fbc565b610503565b6002546102139060ff1681565b60405160ff9091168152602001610168565b610238610233366004610f6e565b610795565b005b61017e610248366004610ff8565b6107fa565b61023861025b366004611129565b610925565b61017e61026e3660046110e4565b6109f5565b610238610281366004610f6e565b610a9c565b6101d2610294366004610f6e565b60056020526000908152604090205481565b61017e610afb565b600454610154906001600160a01b031681565b610196610b56565b61017e6102d7366004610ff8565b610b63565b6101d26102ea366004610f89565b600660209081526000928352604080842090915290825290205481565b610238610315366004610f6e565b610d9e565b6000805461032790611271565b80601f016020809104026020016040519081016040528092919081815260200182805461035390611271565b80156103a05780601f10610375576101008083540402835291602001916103a0565b820191906000526020600020905b81548152906001019060200180831161038357829003601f168201915b505050505081565b60008082116103f05760405162461bcd60e51b815260206004820152600f60248201526e43616e6e6f7420757365207a65726f60881b60448201526064015b60405180910390fd5b3360008181526006602090815260408083206001600160a01b03881680855290835292819020869055518581529192917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350600192915050565b600060c88351111561049e5760405162461bcd60e51b8152602060048201526013602482015272546f6f206d616e7920726563697069656e747360681b60448201526064016103e7565b60005b83518110156104f9576104e68482815181106104bf576104bf6112f3565b60200260200101518483815181106104d9576104d96112f3565b6020026020010151610b63565b50806104f1816112ac565b9150506104a1565b5060019392505050565b60006001600160a01b03831661052b5760405162461bcd60e51b81526004016103e790611197565b600082116105735760405162461bcd60e51b815260206004820152601560248201527443616e6e6f7420757365207a65726f2076616c756560581b60448201526064016103e7565b6001600160a01b0384166000908152600560205260409020548211156105d05760405162461bcd60e51b8152602060048201526012602482015271084c2d8c2dcc6ca40dcdee840cadcdeeaced60731b60448201526064016103e7565b6001600160a01b0383166000908152600560205260409020546105f38382611223565b116106325760405162461bcd60e51b815260206004820152600f60248201526e43616e6e6f74206f766572666c6f7760881b60448201526064016103e7565b6001600160a01b038416600090815260066020908152604080832033845290915290205482111561069d5760405162461bcd60e51b815260206004820152601560248201527443616e6e6f74206f76657220616c6c6f77616e636560581b60448201526064016103e7565b6001600160a01b0384166000908152600560205260409020546106c09083610e0d565b6001600160a01b0380861660009081526005602052604080822093909355908516815220546106ef9083610e73565b6001600160a01b03808516600090815260056020908152604080832094909455918716815260068252828120338252909152205461072d9083610e0d565b6001600160a01b03858116600081815260066020908152604080832033845282529182902094909455518581529186169290917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35060019392505050565b6004546001600160a01b031633146107ac57600080fd5b6001600160a01b0381166107d25760405162461bcd60e51b81526004016103e790611197565b600780546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b60075460009061010090046001600160a01b0316331461081957600080fd5b60075460ff161561082957600080fd5b6001600160a01b03831661084f5760405162461bcd60e51b81526004016103e790611197565b6001600160a01b0383166000908152600560205260409020546108728382611223565b1161087c57600080fd5b6003546108898382611223565b1161089357600080fd5b61089f60035483610e73565b6003556001600160a01b0383166000908152600560205260409020546108c59083610e73565b6001600160a01b038416600081815260056020526040908190209290925590517f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885906109149085815260200190565b60405180910390a250600192915050565b6008546001600160a01b0316331461093c57600080fd5b6008546001600160a01b031660009081526005602052604090205481118015906109665750600081115b61096f57600080fd5b6008546001600160a01b03166000908152600560205260409020546109949082610e0d565b6008546001600160a01b03166000908152600560205260409020556003546109bc9082610e0d565b6003556040518181527fb90306ad06b2a6ff86ddc9327db583062895ef6540e62dc50add009db5b356eb9060200160405180910390a150565b600080610a0583620f424061123b565b905060c884511115610a4f5760405162461bcd60e51b8152602060048201526013602482015272546f6f206d616e7920726563697069656e747360681b60448201526064016103e7565b60005b8451811015610a9157610a7e858281518110610a7057610a706112f3565b602002602001015183610b63565b5080610a89816112ac565b915050610a52565b506001949350505050565b6004546001600160a01b03163314610ab357600080fd5b6001600160a01b038116610ad95760405162461bcd60e51b81526004016103e790611197565b600880546001600160a01b0319166001600160a01b0392909216919091179055565b60075460009061010090046001600160a01b03163314610b1a57600080fd5b6007805460ff191660011790556040517fb828d9b5c78095deeeeff2eca2e5d4fe046ce3feb4c99702624a3fd384ad2dbc90600090a150600190565b6001805461032790611271565b60006001600160a01b038316301415610b7b57600080fd5b6001600160a01b038316610ba15760405162461bcd60e51b81526004016103e790611197565b60008211610be95760405162461bcd60e51b815260206004820152601560248201527443616e6e6f7420757365207a65726f2076616c756560581b60448201526064016103e7565b33600090815260056020526040902054821115610c3d5760405162461bcd60e51b8152602060048201526012602482015271084c2d8c2dcc6ca40dcdee840cadcdeeaced60731b60448201526064016103e7565b6001600160a01b038316600090815260056020526040902054610c608382611223565b1015610c995760405162461bcd60e51b81526020600482015260086024820152674f766572666c6f7760c01b60448201526064016103e7565b6001600160a01b0383166000908152600560205260408082205433835290822054610cc49190611223565b33600090815260056020526040902054909150610ce19084610e0d565b33600090815260056020526040808220929092556001600160a01b03861681522054610d0d9084610e73565b6001600160a01b0385166000818152600560205260409081902092909255905133907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610d5e9087815260200190565b60405180910390a36001600160a01b038416600090815260056020526040808220543383529120548291610d9191611223565b146104f9576104f96112c7565b6001600160a01b038116610db157600080fd5b6004546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600480546001600160a01b0319166001600160a01b0392909216919091179055565b600082821115610e5f5760405162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f77000060448201526064016103e7565b6000610e6b838561125a565b949350505050565b600080610e808385611223565b905083811015610ed25760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016103e7565b9392505050565b80356001600160a01b0381168114610ef057600080fd5b919050565b600082601f830112610f0657600080fd5b81356020610f1b610f16836111ff565b6111ce565b80838252828201915082860187848660051b8901011115610f3b57600080fd5b60005b85811015610f6157610f4f82610ed9565b84529284019290840190600101610f3e565b5090979650505050505050565b600060208284031215610f8057600080fd5b610ed282610ed9565b60008060408385031215610f9c57600080fd5b610fa583610ed9565b9150610fb360208401610ed9565b90509250929050565b600080600060608486031215610fd157600080fd5b610fda84610ed9565b9250610fe860208501610ed9565b9150604084013590509250925092565b6000806040838503121561100b57600080fd5b61101483610ed9565b946020939093013593505050565b6000806040838503121561103557600080fd5b823567ffffffffffffffff8082111561104d57600080fd5b61105986838701610ef5565b935060209150818501358181111561107057600080fd5b85019050601f8101861361108357600080fd5b8035611091610f16826111ff565b80828252848201915084840189868560051b87010111156110b157600080fd5b600094505b838510156110d45780358352600194909401939185019185016110b6565b5080955050505050509250929050565b600080604083850312156110f757600080fd5b823567ffffffffffffffff81111561110e57600080fd5b61111a85828601610ef5565b95602094909401359450505050565b60006020828403121561113b57600080fd5b5035919050565b600060208083528351808285015260005b8181101561116f57858101830151858201604001528201611153565b81811115611181576000604083870101525b50601f01601f1916929092016040019392505050565b60208082526017908201527f43616e6e6f7420757365207a65726f2061646472657373000000000000000000604082015260600190565b604051601f8201601f1916810167ffffffffffffffff811182821017156111f7576111f7611309565b604052919050565b600067ffffffffffffffff82111561121957611219611309565b5060051b60200190565b60008219821115611236576112366112dd565b500190565b6000816000190483118215151615611255576112556112dd565b500290565b60008282101561126c5761126c6112dd565b500390565b600181811c9082168061128557607f821691505b602082108114156112a657634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156112c0576112c06112dd565b5060010190565b634e487b7160e01b600052600160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220a6eb99ca708c0bc5382cd86423ae73014c89abcdafaad4a8471d2875c14552d364736f6c63430008070033";

type CUSDConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CUSDConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CUSD__factory extends ContractFactory {
  constructor(...args: CUSDConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    initialSupply: PromiseOrValue<BigNumberish>,
    tokenName: PromiseOrValue<string>,
    decimalUnits: PromiseOrValue<BigNumberish>,
    tokenSymbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CUSD> {
    return super.deploy(
      initialSupply,
      tokenName,
      decimalUnits,
      tokenSymbol,
      overrides || {}
    ) as Promise<CUSD>;
  }
  override getDeployTransaction(
    initialSupply: PromiseOrValue<BigNumberish>,
    tokenName: PromiseOrValue<string>,
    decimalUnits: PromiseOrValue<BigNumberish>,
    tokenSymbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      initialSupply,
      tokenName,
      decimalUnits,
      tokenSymbol,
      overrides || {}
    );
  }
  override attach(address: string): CUSD {
    return super.attach(address) as CUSD;
  }
  override connect(signer: Signer): CUSD__factory {
    return super.connect(signer) as CUSD__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CUSDInterface {
    return new utils.Interface(_abi) as CUSDInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): CUSD {
    return new Contract(address, _abi, signerOrProvider) as CUSD;
  }
}
