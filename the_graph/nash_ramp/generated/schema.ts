// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  TypedMap,
  Entity,
  Value,
  ValueKind,
  store,
  Bytes,
  BigInt,
  BigDecimal
} from "@graphprotocol/graph-ts";

export class EscrowTransaction extends Entity {
  constructor(id: string) {
    super();
    this.set("id", Value.fromString(id));
  }

  save(): void {
    let id = this.get("id");
    assert(id != null, "Cannot save EscrowTransaction entity without an ID");
    if (id) {
      assert(
        id.kind == ValueKind.STRING,
        `Entities of type EscrowTransaction must have an ID of type String but the id '${id.displayData()}' is of type ${id.displayKind()}`
      );
      store.set("EscrowTransaction", id.toString(), this);
    }
  }

  static load(id: string): EscrowTransaction | null {
    return changetype<EscrowTransaction | null>(
      store.get("EscrowTransaction", id)
    );
  }

  get id(): string {
    let value = this.get("id");
    return value!.toString();
  }

  set id(value: string) {
    this.set("id", Value.fromString(value));
  }

  get txType(): i32 {
    let value = this.get("txType");
    return value!.toI32();
  }

  set txType(value: i32) {
    this.set("txType", Value.fromI32(value));
  }

  get clientAddress(): Bytes | null {
    let value = this.get("clientAddress");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBytes();
    }
  }

  set clientAddress(value: Bytes | null) {
    if (!value) {
      this.unset("clientAddress");
    } else {
      this.set("clientAddress", Value.fromBytes(<Bytes>value));
    }
  }

  get agentAddress(): Bytes | null {
    let value = this.get("agentAddress");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBytes();
    }
  }

  set agentAddress(value: Bytes | null) {
    if (!value) {
      this.unset("agentAddress");
    } else {
      this.set("agentAddress", Value.fromBytes(<Bytes>value));
    }
  }

  get netAmount(): BigInt | null {
    let value = this.get("netAmount");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set netAmount(value: BigInt | null) {
    if (!value) {
      this.unset("netAmount");
    } else {
      this.set("netAmount", Value.fromBigInt(<BigInt>value));
    }
  }

  get agentFee(): BigInt | null {
    let value = this.get("agentFee");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set agentFee(value: BigInt | null) {
    if (!value) {
      this.unset("agentFee");
    } else {
      this.set("agentFee", Value.fromBigInt(<BigInt>value));
    }
  }

  get nashFee(): BigInt | null {
    let value = this.get("nashFee");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set nashFee(value: BigInt | null) {
    if (!value) {
      this.unset("nashFee");
    } else {
      this.set("nashFee", Value.fromBigInt(<BigInt>value));
    }
  }

  get grossAmount(): BigInt | null {
    let value = this.get("grossAmount");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set grossAmount(value: BigInt | null) {
    if (!value) {
      this.unset("grossAmount");
    } else {
      this.set("grossAmount", Value.fromBigInt(<BigInt>value));
    }
  }

  get agentApproval(): boolean {
    let value = this.get("agentApproval");
    return value!.toBoolean();
  }

  set agentApproval(value: boolean) {
    this.set("agentApproval", Value.fromBoolean(value));
  }

  get clientApproval(): boolean {
    let value = this.get("clientApproval");
    return value!.toBoolean();
  }

  set clientApproval(value: boolean) {
    this.set("clientApproval", Value.fromBoolean(value));
  }

  get agentPhoneNumber(): string | null {
    let value = this.get("agentPhoneNumber");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set agentPhoneNumber(value: string | null) {
    if (!value) {
      this.unset("agentPhoneNumber");
    } else {
      this.set("agentPhoneNumber", Value.fromString(<string>value));
    }
  }

  get clientPhoneNumber(): string | null {
    let value = this.get("clientPhoneNumber");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set clientPhoneNumber(value: string | null) {
    if (!value) {
      this.unset("clientPhoneNumber");
    } else {
      this.set("clientPhoneNumber", Value.fromString(<string>value));
    }
  }
}
